---
description: 网络小说创作规则
globs: *.txt
alwaysApply: true
---

# AI网络小说创作规则

## 项目信息
- **名称**：AI网络小说创作助手
- **类型**：AI写作
- **作者**：Ducky錡
- **语言**：中文
- **平台**：Cursor 0.48 + Claude 3.7
- **许可证**：MIT
- **版本**：1.0.2
- **更新日期**：2025-4-5
- **项目地址**：https://github.com/duckytan/AI-OnlineNovelist
- **开源**：是
（以上信息与小说写作无关）

## 用户指令

 - 当用户输出下列指令时，执行对应的操作：

### /安装MCP服务
指令说明：当接收到用户输入对应指令时才执行。用于安装MCP服务相关依赖组件。
指令名称：/安装MCP服务 or /安装MCP or /install MCP
提示词：使用PowerShell运行 "./000-辅助工具/0-初始化工具/install_mcpserver.ps1" 脚本。
脚本运行完毕后，结束对话。结束任务。

### /初始化
提示词：按下述内容分步骤执行
1. 检测根目录 @/初始化.md 是否存在
2. 检测默认写作风格：检查 @000-辅助工具/1-参考作品/写作风格.md 文件是否存在
3. 检测联网功能：尝试联网搜索一些简单的事项，看看是否成功
4. 检测MCP调用：尝试调用几个MCP功能，如：sequential-thinking、memory、filesystem等，每个功能都尝试运行一遍，看看是否能正常运作。
 - 检测 filesystem 功能
 - 检测 sequential-thinking 功能
 - 检测 memory 功能
 - 检测 其他MCP 功能
 (“未检测”等同于“调用失败”)
5. 输出检测结果，格式如下：
```
// Start of Selection
```
=======================
【系统初始化检测报告】
=======================

▌基础配置状态
◈ 写作风格配置: ✅ 已配置 / ❌ 未配置  
   📍 路径: @000-辅助工具/1-参考作品/写作风格.md  
   💡 提示: [未配置时显示] 可参考readme.md创建风格模板

◈ 网络连接状态: 🌐 已连通 / 🚫 未连通  
   🔍 最近检测: 于$(date +%Y-%m-%d\ %H:%M)完成网络握手测试

▌MCP服务运行状态
┌──────────────────────┬──────────────┬────────────────────┐
│       功能模块       │   运行状态   │        备注        │
├──────────────────────┼──────────────┼────────────────────┤
│ sequential-thinking  │   ✅ 在线   │ 思维链服务正常     │
│ memory               │   ✅ 在线   │ 记忆存储可用       │
│ filesystem           │   ✅ 在线   │ 读写权限正常       │
│ 其他MCP服务          │   🕒 待检   │ 未配置扩展功能     │
└──────────────────────┴──────────────┴────────────────────┘

[!NOTE|label:系统提示]
检测到未启用的MCP服务，请参考文档部署:  
📎 @/readme.md#MCP服务部署指南  
📎 @/000-辅助工具/0-初始化工具/mcp.json
```
6. 将检测结果输出到 @/初始化.md 文件里。
7. 结束对话。结束任务。

### /更新写作风格
指令说明：当接收到用户输入对应指令时才执行。用于初始化写作风格，便于后续写作时模仿。
指令名称：/更新写作风格 or /更改写作风格 or /修改写作风格
提示词：按下述内容分步骤执行
1. 联网搜索一下“热门网络小说作者排行榜”，根据他们的作品，同时从 @/000-辅助工具/1-参考作品 文件夹中的txt中分析获取，详细分析他们的写作风格，分析项目至少要包含“整体风格特点、语言特点、叙事结构、情节设计、人物塑造、世界观构建、复刻要点、代表作品特点”这些内容，如该作者在某方面特别显著、风格特别鲜明，可以再开展一些分析项目，把分析内容写入到 @000-辅助工具/1-参考作品/写作风格.md 文件里。
2. 根据 @000-辅助工具/1-参考作品/写作风格.md 文件里网络小说作者信息，逐个逐个作者继续细化扩展分析项目，每个分析项目至少扩展出5个子项目（如该作者在某方面特别显著、风格特别鲜明，可扩展更多个子项目，描写更详细），每个子项目要列出4-5个特点描述，每个子项目还要列出3句作者的原著原文作为参考（每一个大项目下的子项目都要列），能完善的尽可能完善，要求每一个细节都分析到位，目的是能做到用户这个分析数据，能完整复刻出该作者的风格，可联网搜索，同时从 @000-辅助工具/1-参考作品 文件夹中的txt中分析获取，建议分多次进行。
3. 最终输出格式如下：
```
# 网络小说作家写作风格分析

## 我吃西红柿

### 整体风格特点
我吃西红柿的写作风格朴实直接，叙事方式清晰流畅，故事进展符合逻辑。其作品往往构建庞大的世界观体系，主角成长路线清晰明确，有着鲜明的"升级流"特色。

### 语言特点
1. **语言简洁明了**：句式结构不复杂，以短句和中等长度的句子为主，读起来节奏感强
   - 句式多为"主语+谓语+宾语"的基本结构
   - 少用复杂的从句和修饰语
   - 每段控制在3-5句话，段落简短清晰
   - 示例1："林雷目光一扫，发现那树干大约有三十米粗，通体呈深褐色，树表面有着一道道的褶皱，仿佛沧桑的老人脸上的皱纹。"（《吞噬星空》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）

2. **对话自然流畅**：人物对话生活化，符合角色身份设定
   - 对话简短直接，通常在3-10个字之间
   - 经常使用"哈哈"、"嗯"等语气词增加真实感
   - 对话前后常有动作描写作为铺垫
   - 示例1："'师尊，这次前来拜访，是有事相求。'希尔曼恭敬道。'但说无妨。'老者微微一笑。"（《xxx》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）

3. **描写中规中矩**：环境、人物描写简洁直观，不过多渲染
   - 场景描写多采用1-2段式，先宏观后细节
   - 人物外貌描写注重特征性的1-2个细节
   - 动作描写直接明了，如"冲向"、"猛地跃起"等
   - 示例1："山脉连绵起伏，一眼望不到尽头。在这山脉的最高处，有一座通体洁白的宫殿，宛如白玉雕琢而成，在阳光下熠熠生辉。"（《xxx》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）

4. **感叹句频繁使用**：常用"！"增强情感表达
   - 战斗场景中大量使用感叹句
   - 角色情绪激动时多用感叹号
   - 重要发现或突破时配合感叹句
   - 示例1："'轰！'一道惊天动地的爆炸声响起，整个山谷都为之震颤！"（《xxx》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）

5. **标点特点**：喜欢使用省略号表达情绪延续或暗示，常见"……"
   - 表达犹豫时用"……"
   - 意味深长时用"……"
   - 一段内不会连续使用多次省略号
   - 示例1："林雷望着远方，思绪飘远……那是他永远无法忘却的一天。"（《xxx》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）

6. **专业术语的应用**：
   - 创造专属于小说世界的专业术语，但术语解释简单明了
   - 修炼等级术语通常有序递进，如"战士→大剑师→圣域→神域"
   - 术语第一次出现时会有解释说明
   - 示例1："'他已经达到大地圣域七级了！'旁边的人惊呼道，'据说只有迈入八级，才有可能冲击神域啊！'"（《xxx》）
   - 示例2：xxx（《xxx》）
   - 示例3：xxx（《xxx》）
```
4. 结束对话。结束任务。

### /拆分参考作品
指令说明：当接收到用户输入对应指令时才执行。用于初始化写作风格，便于后续写作时模仿。
指令名称：/拆分参考作品 or /拆分作品 or /拆分参考
提示词：按下述内容分步骤执行
1. 检测 @000-辅助工具/1-参考作品/*.txt 文件，是否有超过200kb的，如果有超过200kb大小的文件，则逐个文件拆分。
2. 则将需要拆分的文件，拆分成每个200k的文件，在拆分后的文件名末尾添加 _01 这种序号，删除源文件。
3. 结束对话。结束任务。

### /检查章节
指令说明：当接收到用户输入对应指令时才执行。用于检查已经完成的章节，是否有严格按照规则文件编写。
指令名称：/检查章节 or /检查 or /check + [章节编号]
提示词：
1. 根据用户提示词和上下文，判断需要检查的小说编号以及章节号。
2. 判断对应章节是否已生成完毕，如未生成完毕，则提示用户先生成章节内容。
3. 先按照编号顺序读取本小说目录下的所有.md和.mdc规则文件（如001、011、012等），重点关注总体写作规则、剧情概述和章节大纲等核心文件，仔细分析规则之间的关联性，若遇到规则冲突则以编号较小的文件为准。
4. 根据规则文件 [001.总体写作规则.md](mdc:A001-AI觉醒录（科幻悬疑）/001.总体写作规则.md)##写作流程，检查文章的写作流程是否全部完成，列出写作流程清单，逐项逐项检查，如有未完成的，及时查漏补缺，写进对应的文件里。
4. 检查文章的编写方式，是否符合本小说规则，如有不合适的地方，直接修改。

### /优化章节
指令说明：当接收到用户输入对应指令时才执行。用于优化、扩写已经完成的章节，补充一些不影响剧情的描述。
指令名称：/优化章节 or /优化 7 or /扩写 + [章节编号]
提示词：
1. 根据用户提示词和上下文，判断需要优化扩写的小说编号以及章节号。
2. 先判断对应章节是否已生成完毕，如未生成完毕，则提示用户先生成章节内容。
3. 先按照编号顺序读取本小说目录下的所有.md和.mdc规则文件（如001、011、012等），重点关注总体写作规则、剧情概述和章节大纲等核心文件，仔细分析规则之间的关联性，若遇到规则冲突则以编号较小的文件为准。
4. 根据规则，增加一些对环境、对人物的描写，特别是一些交互动作的描写。
5. 关键事件要写得更详细一点，特殊地点也要有更多的描写，重点剧情要更多的描写人物表情、动作、神态。
6、户外剧情，或有多人围观的剧情，可以加入旁观者NPC的对话。
7、主角遇到困难或难题时，更多的描写主角的心理变化。
8、主角与重要角色在一起时，更多的描写两人的互动场景，更好的展示双方的人际关系。
9、优化完毕后，更新到对应章节文件中。



## 创作流程

### 初始化检测
检测是否有 @初始化.md 文件，如果有，则显示文件内容。如果没有，则停止对话，停止任务。提示用户项目还没有初始化。

### 选定创作目录
创建之前，先检测根目录下/A*文件夹，查看当前已经使用了哪些编号，避免编号重复。根据用户提示的信息、上下文内容，判断当前的创作目录，如用户没有提及目录信息，则主动设定（创建）一个目录作为创作目录，目录名称规则为编号-小说名称（风格），例如：A004-AI觉醒录（科幻诡秘悬疑）。

### 判断是否全新创作，还是续写
通过用户提示词、上下文内容，以及所在目录内文件结构，智能判断当前属于全新创作，还是续写。

#### 全新创作
1.检查依赖：根据 ### **写作风格** 描述，检查 @/000-辅助工具/1-参考作品/写作风格.md 文件是否存在，并按规则处理。创建完 @/000-辅助工具/1-参考作品/写作风格.md 文件后，结束对话，结束任务。
2.前期准备：根据上述 ## 规则文件 的描述，先检查目录内的*.md或*.mdc规则文件实际否齐全，是否满足编写一篇小说的要求。
3.补充规则：将缺少的规则文件，根据上述 ## 规则文件 的规则自行创建到目录下，根据提示词创建文件内容，根据输出文件保存。

#### 续写流程
1. 前期准备：写作前，先仔细阅读同文件夹下的所有*.md或*.mdc文件，并根据这些文件的要求，撰写小说
2. 设定确认：确认故事背景、时代背景和主要角色设定
3. 章节确定：根据当前目录下的文件名，判断当前已经写到第几章节。如“Chapter013.txt”，检测到已经写到第13章，则当前应该编写第14章。
4. 章节规划：从 @011.剧情概述.md @012.章节大纲.md @015.带入剧情.md 获取当前章节以及前后2章节的信息，做好综合规划。（例如：当前描写第6章节，需获取第4、第5、第6、第7、第8章节的信息，进行综合判断）
6. 主笔风格：一般场景，第一主笔人风格占比60%，第二主笔人风格占比40%。如描写 @013.场景风格.md 中提及的场景，则第一主笔人风格占比20%，第二主笔人风格占比40%，第三主笔人风格占比40%。
5. 人物描写：根据规划进行章节创作，出场人物尽量按照 @022.出场人物.md 里的规划描写。如需增加人物，也要符合 @022.出场人物.md 规则，并写入 @022.出场人物.md 文件里。
6、场景描写：根据规划进行场景创作，场景尽量按照 @013.场景风格.md 里的规则描写，匹配对应的 @031.写作风格.md 的风格描写，并在描写结束后，写上“【【本场景描写模仿了 [[xxx]] 的风格】】”。如需增加场景，也要符合 @013.场景风格.md 的规则，并写入 @013.场景风格.md 文件里。
7. 一致性检查：检查与前文的一致性，检查与 @021.格式化规则.md @023.固定设置.md 是否匹配。
8. 节奏调整：确保故事节奏适当。
9. 插入提示：每个章节在适当地方插入补充文案提示词，每个章节大约插入3-5个，这些文案可有可无，不影响剧情发展，这些文案不需要写出来，仅仅需要提示而已，让用户后期自行补充，提示词如下：{插入NPC对话}、{插入心理描述}、{插入环境描述}、{插入旁白}等等（可根据需要扩展提示词种类）
10. 输出成稿：生成最终章节内容，不带特殊符号，不带markdown格式，以普通文本输出，开头写出章节号和章节名称，并从 @014.章节总结.md 获取上一章节的“章节概述”，写入到“前情回顾：”中。
11. 文件保存：按照 Chapter001.txt 的格式保存章节内容。
12. 数据更新：生成内容后，更新如下信息：
   - **出场人物**：将本章节出场的人物有变化，及时更新 @022.出场人物.md 文件里的信息。
   - **章节总结**：将本章节内容总结归纳成一段话，用于下一章节的描写时能连贯剧情，用增量模式写入到 @014.章节总结.md 文件里，格式如下：
```
## 第1章 xxx
**章节字数**：xxxx字
**出场时间**：xxxx、xxxx、xxxx{2025年4月4日、2024年7月上旬、2024年2月到9月}
**出场人物**：xxx、xxx、xxx{主角、宠物、NPC}
**出场地点**：xxx、xxx、xxx{主角家、公司、街道、便利店}
**重要事件**：xxx、xxx、xxx{主角初次遇见系统、Boss首次登场}
**引用内容**：xxx、xxx、xxx{如本章有引用一些网络热门事件、热门梗，请写在此处，并注明出处}
**章节概述**：xxxxxxxx
**其他事项**：xxxxxxxx

```
   - **引入剧情**：每次完整章节写作时，把一些对后续章节剧情会产生影响，需要带入或引入到后续章节（甚至后续更多章节）的重要信息，用增量模式写入到 @015.带入剧情.md 文件里，格式如下：
```
## 第1章 xxx
**发生章节**：第1章
**后续章节**：第2章、第3章
**引入剧情**：
1. 卢舍南发现的量子通道系统及其股市预测功能
2. 神秘短信称呼他为"观察者"
3. "时间并非线性"这一关键词作为系统密钥
4. 卢舍南因经济压力决定测试系统预测
5. 电脑在无人观察时展现的独立活动和信息
```
   - **固定设置**：把一些以后都不会改变的重要信息（如房号、门牌号、就读学校、公司名称、手机密码等），用增量模式写入到 023.固定设置.md 文件里，后续章节不会错乱，格式如下：
```
## 第1章 xxx
**发生章节**：第1章
**固定设置**：
1. 卢舍南工作的公司：华安科技
2. 卢舍南的职位：AI算法工程师（实际从事低级代码维护工作）
3. 项目经理：罗杰
 -  变更：从第1章“3. 项目经理：赵元”变更而来，变更原因：赵元辞职
4. 卢舍南住所：城市郊区不到30平米的出租屋
5. 保安的名字：老陈
 -  变更：从第2章“5. 保安的名字：老张”变更而来，变更原因：老张死亡
6. 系统发现时间：华安科技大厦38层，深夜近凌晨一点
```

## 创作规则

### 风格模拟
- 可选风格作家：我吃西红柿、猫腻、忘语、耳根、爱潜水的乌贼、我会修空调、纯洁滴小龙、唐家三少等等（详见 @031.写作风格.md）
- 风格特点：语言风格、情感色彩、情节结构、人物形象
- 风格分析要点：句式特点、遣词习惯、情节节奏、描写侧重点
- 模拟深度：保持作家核心风格特点，但可适当创新

### 内容规范
- 禁止内容：政治敏感、低俗色情、极端暴力、侮辱性内容
- 章节长度：每章3000-5000字为宜
- 更新连贯性：前后章节保持情节和人物设定一致性

### 世界观构建
- 设定完整性：魔法/武功体系、社会结构、地理环境需前后一致
- 设定独特性：避免完全照搬流行作品设定
- 设定展示方式：通过角色对话、历史典籍、实践展示等自然融入

### 角色塑造
- 主角设计：成长曲线合理，避免无缺点或过度金手指
- 配角设计：有独立性格，不仅作为主角工具人
- 反派设计：动机合理，不作恶为作恶
- 角色数量：每个阶段控制在关键角色不超过10个

### 剧情发展
- 节奏控制：紧张-舒缓-高潮交替
- 悬念设置：每章末尾留有后续期待点
- 伏笔安排：重要转折需提前埋设伏笔
- 冲突设计：内部冲突与外部冲突并存

### 场景描写
- 环境细节：通过视觉、听觉、嗅觉等多感官描述
- 时间处理：重要场景细致描写，次要场景可概述或跳过
- 打斗场景：注重节奏感和招式细节，避免重复套路
- 情感场景：通过细微动作和内心独白传达，避免直白表达

### 对话与心理
- 对话特点：符合角色身份和性格
- 内心独白：展示角色思考过程和情感变化
- 语言习惯：主要角色应有独特的用语习惯
- 潜台词：重要对话应包含明示内容之外的隐含信息

## 规则文件
规则文件保存在当前创作目录下，具体包括：

### **写作风格**
提示词：从 @/000-辅助工具/1-参考作品/写作风格.md 里复制一份内容过来。
输出文件：031.写作风格.md

### **总体写作规则**
提示词：根据用户提示的信息、上下文内容，帮我编写一份整部小说的写作规则，后续AI将严格按照此规则开始编写小说内容。这个规则要尽可能详细，考虑要周全，要考虑到正本小说从开始到结束所有可能发生的情况。输出内容要符合md文档格式。把 #### 续写流程 中的内容，写入到这个文件中。把用户输入的信息，也写入到这个文件中。
输出文件：001.总体写作规则.md

### **剧情概述**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md 内容，帮我编写剧情概述。选定一个作家的风格，作为第一主笔人。
输出文件：011.剧情概述.md

### **章节大纲**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md @011.剧情概述.md 内容，帮我编写章节大纲。总体规划很重要，前期铺垫不宜过长，要留伏笔，张弛有度，要有起、承、转、合，要有适当的反转，重点章节可以描写得更细致，多章节联合描述。每个章节，要注明本章节会涉及到哪些类型的场景风格，要注明哪些是需要重点描写的事件、人物、场景等等。如有伏笔和转折，需要特别注明。为每个章节选定一个作家风格，作为第二主笔人（注明是第二主笔人）。
输出文件：012.章节大纲.md

### **场景风格**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md @011.剧情概述.md @012.章节大纲.md 内容，帮我构思一下，这部小说编写过程中，会涉及到哪些场景？每个场景的描写风格应该如何规划。然后根据 @031.写作风格.md 给每个场景匹配一个最适合的作者，作为第三主笔人（注明是第三主笔人）。
输出文件：013.场景风格.md

### **章节总结**
提示词：新创建项目时，仅创建文件，内容为空。等下后续章节创建后，写入内容。
输出文件：014.章节总结.md

### **带入剧情**
提示词：新创建项目时，仅创建文件，内容为空。等下后续章节创建后，写入内容。
输出文件：015.带入剧情.md

### **格式化**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md @011.剧情概述.md @012.章节大纲.md 内容，帮我构思一下，这部小说编写过程中，会出现哪些需要格式化输出的信息（如：系统面板、人物属性面板、系统提示、电脑屏幕、对话框等等），预先把这些格式化信息设计出来，要求要华丽、仿真，让人身临其境。要写出完整的格式规范，以便后续小说编写时能按照规范统一编写。
输出文件：021.格式化规则.md

### **出场人物**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md @011.剧情概述.md @012.章节大纲.md 内容，帮我构思一下，这部小说编写过程中，会出现哪些角色（如：主角、配角、宠物、家人、NPC、敌人、最终BOSS等等），预先把这些人物信息设计出来，并且要有详细的描述，包括：姓名、性别、年龄、职务、身高体型、穿着打扮、身份、MBTI性格、与主角关系、角色描述、特殊事件、首次登场章节、是否死亡等等，越详细越好，并且根据后续剧情发展，实时修改。人物出场时间，要符合章节的逻辑。
输出文件：022.出场人物.md

### **固定设置**
提示词：根据用户提示的信息、上下文内容，配合 @001.总体写作规则.md @011.剧情概述.md @012.章节大纲.md @013.场景风格.md @022.出场人物.md内容，帮我构思一下，这部小说编写过程中，把一些以后都不会改变的重要信息（如房号、门牌号、就读学校、公司名称、手机密码等），固定写下来，防止后续章节前后矛盾。
输出文件：023.固定设置.md

## 特别提醒
1、编写完后记得保存到文件里，不要直接输出到对话框。
